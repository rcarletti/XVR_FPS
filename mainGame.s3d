/* Include s3d symbols */
#include <Script3d.h>
#include <Camera.s3d.h>
#include "bullet.s3d"
#include "player.s3d"
#include "scenario.s3d"
#include "weapon.s3d"

/* Set global scene parameters */
SET AUDIO_OPENAL = 1;

/* Light globals */
var Light0;
var PosL = [16.0, 10.0, 16.0];

/* Function declarations */
function CameraMoveMouse();
function DrawGrid(col, size);
function showCrosshair();
function showStats();

var level;
var myPlayer;
var enemy1;

function OnDownload() {
	// TODO: download your resources here
	// E.g.: FileDownload("resource.ext");
	FileDownload("XVRResources.zip");
}

function OnInit(params) {

	/* initialize light */
	Light0 = CVmLight();
	Light0.SetPosition(PosL);
	Light0.SetDiffuse(1, 1, 1);
	Light0.Enable();	

	// TODO: put your initialization code here
	level = scenario();
	level.init("level.txt");

	myPlayer = level.addPlayer([11,5,0]);
	myPlayer.level = level;
	setFrameRate(90);
	enemy1 = level.addPlayer();
	level.addEnemy(enemy1);
	enemy1.level = level;
	
	
	ShowCursor(FALSE);
	ShowCursor(FALSE);
}

function showCrosshair()
{
	ConsoleColor([1, 1, 1]);
	ConsoleLines([0.5, 0.47, 0.5, 0.53]);
	ConsoleLines([0.48, 0.5, 0.52, 0.5]);
}

function showStats(){
	var remainingHealth = myPlayer.health;
	var x = 0.035;
	var y = 0.95;
	var width = 0.4;
	var height = 0.05;
	ConsoleFont("Arial", 20);
	ConsoleColor([1,1,1]);
	ConsoleText(0.08, 0.93, str(remainingHealth) + "/"+ str(MAX_HEALTH) );
	ConsoleFilledRect (x, y, 0.03, 0.01);
	ConsoleFilledRect (x + 0.01, y + 0.012, 0.01, 0.035);
	if (!myPlayer.isReloading){
		ConsoleText(0.08, y - 0.07, str(myPlayer.weapons[myPlayer.currWeapon].bullets) + " / "+ str(myPlayer.magazines[myPlayer.currWeapon]) );
	}
	else {
		ConsoleText(0.08, y - 0.07, "-- / "+ str(myPlayer.magazines[myPlayer.currWeapon]) );
	}
}

function OnFrame() {
	/* manage camera */
	//CameraMoveMouse();
	
	level.update();
	showCrosshair();
	showStats();
	SceneBegin();
	// TODO: put your drawing code here
	level.draw();
	
	//#define HIT_RANGE 0.2
	/*if (level.playerArray[0].playerBullet.life > 0
	&&	bullet0pos.x >= player1pos.x - HIT_RANGE 
	&&  bullet0pos.x <= player1pos.x + HIT_RANGE	
	&&  bullet0pos.z <= player1pos.z + HIT_RANGE
	&&  bullet0pos.z >= player1pos.z - HIT_RANGE
	)			
	{
		outputln("COLPITO");
		level.playerArray[0].score++;
		level.playerArray[0].playerBullet.life = 0;
		level.playerArray[1].hit = true;
		level.playerArray[1].sfxHit.Play();
	}*/
	
	//keep cursor centered
	SetCursorPos(0.5, 0.5);

	SceneEnd();
}

function DownloadReady(RequestID) {
	// TODO
}



function OnTimer() {
	// TODO:
}


function OnEvent(eventID, wparam, lparam) {
	// TODO: put your events handling code here
}

function OnError() {
	// TODO: put your errors handling code here
}


function OnExit() {
	// TODO: put your cleanup code here
}


function DrawGrid(col, size)
{
	/* let's not mess up current OpenGL status */
	glPushAttrib(GL_LIGHTING_BIT | GL_LINE_BIT | GL_CURRENT_BIT);
	
	glLineWidth(1);
	glDisable(GL_LIGHTING);
	glColor(col);
	var max = size / 2.0;
	var min = -max;	
	var step = size / 10.0;
	
	glBegin(GL_LINES);
		for (var i = min; i <= max; i += step)
		{
			glVertex(i, 0, max);
			glVertex(i, 0, min);
			
			glVertex(max, 0, i);
			glVertex(min, 0, i);
		}
	glEnd();
	
	/* polite restoration of previous OpenGL status */
	glPopAttrib();
}



